"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var prop_types_1 = __importDefault(require("prop-types"));
// Carbon Prefix
var configs_1 = require("../configs");
// @ts-ignore
var classnames_1 = __importDefault(require("classnames"));
var buildPaths_1 = require("@carbon/charts/components/diagrams/buildPaths");
var Edge = function (_a) {
    var _b;
    var className = _a.className, color = _a.color, markerEnd = _a.markerEnd, markerStart = _a.markerStart, _c = _a.onMouseEnter, onMouseEnter = _c === void 0 ? null : _c, _d = _a.onMouseOver, onMouseOver = _d === void 0 ? null : _d, _e = _a.onMouseOut, onMouseOut = _e === void 0 ? null : _e, _f = _a.onMouseLeave, onMouseLeave = _f === void 0 ? null : _f, _g = _a.onMouseMove, onMouseMove = _g === void 0 ? null : _g, path = _a.path, source = _a.source, target = _a.target, _h = _a.variant, variant = _h === void 0 ? null : _h;
    var namespace = configs_1.carbonPrefix + "--cc--edge";
    var pathClasses = classnames_1.default(namespace, (_b = {},
        _b[namespace + "--" + variant] = variant,
        _b[className] = className,
        _b));
    var d = path || buildPaths_1.buildStraightPathString(source, target);
    return (react_1.default.createElement("g", { className: pathClasses, onMouseEnter: onMouseEnter, onMouseOver: onMouseOver, onMouseOut: onMouseOut, onMouseLeave: onMouseLeave, onMouseMove: onMouseMove },
        react_1.default.createElement("path", { d: d, className: namespace + "__container" }),
        react_1.default.createElement("path", { d: d, className: namespace + "__outer" }),
        react_1.default.createElement("path", { d: d, className: namespace + "__inner", markerEnd: "url(#" + markerEnd + ")", markerStart: "url(#" + markerStart + ")", style: { stroke: color } })));
};
exports.default = Edge;
Edge.propTypes = {
    /**
     * Provide an optional class to be applied on the outer element
     */
    className: prop_types_1.default.string,
    /**
     * Specify the edge's color
     */
    color: prop_types_1.default.string,
    /**
     * Specify an ID for a corresponding end marker
     */
    markerEnd: prop_types_1.default.string,
    /**
     * Specify an ID for a corresponding start marker
     */
    markerStart: prop_types_1.default.string,
    /**
     * Provide an optional function to be called for the onMouseEnter event
     */
    onMouseEnter: prop_types_1.default.func,
    /**
     * Provide an optional function to be called for the onMouseOver event
     */
    onMouseOver: prop_types_1.default.func,
    /**
     * Provide an optional function to be called for the onMouseOut event
     */
    onMouseOut: prop_types_1.default.func,
    /**
     * Provide an optional function to be called for the onMouseLeave event
     */
    onMouseLeave: prop_types_1.default.func,
    /**
     * Provide an optional function to be called for the onMouseMove event
     */
    onMouseMove: prop_types_1.default.func,
    /**
     * Specify a path string
     */
    path: prop_types_1.default.string,
    /**
     * Coordinates for the source element
     */
    source: prop_types_1.default.shape({
        x: prop_types_1.default.number,
        y: prop_types_1.default.number,
    }),
    /**
     * Coordinates for the target element
     */
    target: prop_types_1.default.shape({
        x: prop_types_1.default.number,
        y: prop_types_1.default.number,
    }),
    /**
     * Specify the variant of the edge
     */
    variant: prop_types_1.default.oneOf([
        'dash-sm',
        'dash-md',
        'dash-lg',
        'dash-xl',
        'double',
        'tunnel',
    ]),
};
