import PropTypes from 'prop-types';
declare const Edge: {
    ({ className, color, markerEnd, markerStart, onMouseEnter, onMouseOver, onMouseOut, onMouseLeave, onMouseMove, path, source, target, variant, }: any): JSX.Element;
    propTypes: {
        /**
         * Provide an optional class to be applied on the outer element
         */
        className: PropTypes.Requireable<string>;
        /**
         * Specify the edge's color
         */
        color: PropTypes.Requireable<string>;
        /**
         * Specify an ID for a corresponding end marker
         */
        markerEnd: PropTypes.Requireable<string>;
        /**
         * Specify an ID for a corresponding start marker
         */
        markerStart: PropTypes.Requireable<string>;
        /**
         * Provide an optional function to be called for the onMouseEnter event
         */
        onMouseEnter: PropTypes.Requireable<(...args: any[]) => any>;
        /**
         * Provide an optional function to be called for the onMouseOver event
         */
        onMouseOver: PropTypes.Requireable<(...args: any[]) => any>;
        /**
         * Provide an optional function to be called for the onMouseOut event
         */
        onMouseOut: PropTypes.Requireable<(...args: any[]) => any>;
        /**
         * Provide an optional function to be called for the onMouseLeave event
         */
        onMouseLeave: PropTypes.Requireable<(...args: any[]) => any>;
        /**
         * Provide an optional function to be called for the onMouseMove event
         */
        onMouseMove: PropTypes.Requireable<(...args: any[]) => any>;
        /**
         * Specify a path string
         */
        path: PropTypes.Requireable<string>;
        /**
         * Coordinates for the source element
         */
        source: PropTypes.Requireable<PropTypes.InferProps<{
            x: PropTypes.Requireable<number>;
            y: PropTypes.Requireable<number>;
        }>>;
        /**
         * Coordinates for the target element
         */
        target: PropTypes.Requireable<PropTypes.InferProps<{
            x: PropTypes.Requireable<number>;
            y: PropTypes.Requireable<number>;
        }>>;
        /**
         * Specify the variant of the edge
         */
        variant: PropTypes.Requireable<string>;
    };
};
export default Edge;
