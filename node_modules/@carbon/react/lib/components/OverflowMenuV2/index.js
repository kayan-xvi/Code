/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var PropTypes = require('prop-types');
var cx = require('classnames');
var iconsReact = require('@carbon/icons-react');
var Menu = require('../Menu/Menu.js');
var useId = require('../../internal/useId.js');
var usePrefix = require('../../internal/usePrefix.js');
var useAttachedMenu = require('../../internal/useAttachedMenu.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

const defaultSize = 'md';

function OverflowMenuV2(_ref) {
  let {
    children,
    className,
    renderIcon: IconElement = iconsReact.OverflowMenuVertical,
    size = defaultSize,
    ...rest
  } = _ref;
  const id = useId.useId('overflowmenu');
  const prefix = usePrefix.usePrefix();
  const triggerRef = React.useRef(null);
  const {
    open,
    x,
    y,
    handleClick,
    handleMousedown,
    handleClose
  } = useAttachedMenu.useAttachedMenu(triggerRef);
  const containerClasses = cx__default["default"](`${prefix}--overflow-menu__container`);
  const triggerClasses = cx__default["default"](`${prefix}--overflow-menu`, {
    [`${prefix}--overflow-menu--open`]: open,
    [className]: className
  }, size !== defaultSize && `${prefix}--overflow-menu--${size}`);
  return /*#__PURE__*/React__default["default"].createElement("div", {
    className: containerClasses,
    "aria-owns": id
  }, /*#__PURE__*/React__default["default"].createElement("button", _rollupPluginBabelHelpers["extends"]({}, rest, {
    type: "button",
    "aria-haspopup": true,
    "aria-expanded": open,
    className: triggerClasses,
    onClick: handleClick,
    onMouseDown: handleMousedown,
    ref: triggerRef
  }), /*#__PURE__*/React__default["default"].createElement(IconElement, {
    className: `${prefix}--overflow-menu__icon`
  })), /*#__PURE__*/React__default["default"].createElement(Menu.Menu, {
    id: id,
    size: size,
    open: open,
    onClose: handleClose,
    x: x,
    y: y
  }, children));
}

OverflowMenuV2.propTypes = {
  /**
   * A collection of MenuItems to be rendered within this OverflowMenu.
   */
  children: PropTypes__default["default"].node,

  /**
   * Additional CSS class names for the trigger button.
   */
  className: PropTypes__default["default"].string,

  /**
   * Otionally provide a custom icon to be rendered on the trigger button.
   */
  renderIcon: PropTypes__default["default"].oneOfType([PropTypes__default["default"].func, PropTypes__default["default"].object]),

  /**
   * Specify the size of the menu, from a list of available sizes.
   */
  size: PropTypes__default["default"].oneOf(['sm', 'md', 'lg'])
};

exports.OverflowMenuV2 = OverflowMenuV2;
