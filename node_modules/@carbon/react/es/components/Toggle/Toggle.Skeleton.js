/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { extends as _extends, defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';
import PropTypes from 'prop-types';
import React__default from 'react';
import cx from 'classnames';
import { PrefixContext } from '../../internal/usePrefix.js';

class ToggleSkeleton extends React__default.Component {
  render() {
    var _div;

    const {
      id,
      labelText,
      className,
      size,
      ...rest
    } = this.props;
    return /*#__PURE__*/React__default.createElement(PrefixContext.Consumer, null, prefix => {
      const toggleInputClassNames = cx(`${prefix}--toggle ${prefix}--skeleton`, {
        [`${prefix}--toggle-input--small`]: size === 'sm'
      });
      return /*#__PURE__*/React__default.createElement("div", _extends({
        className: cx(`${prefix}--form-item`, className)
      }, rest), /*#__PURE__*/React__default.createElement("input", {
        type: "checkbox",
        id: id,
        className: toggleInputClassNames
      }), /*#__PURE__*/React__default.createElement("label", {
        className: `${prefix}--toggle-input__label`,
        htmlFor: id,
        "aria-label": labelText ? undefined : this.props['aria-label']
      }, labelText ? _div || (_div = /*#__PURE__*/React__default.createElement("div", null, labelText)) : null, /*#__PURE__*/React__default.createElement("span", {
        className: `${prefix}--toggle__switch`
      }, /*#__PURE__*/React__default.createElement("span", {
        className: `${prefix}--toggle__text--left`
      }), /*#__PURE__*/React__default.createElement("span", {
        className: `${prefix}--toggle__appearance`
      }), /*#__PURE__*/React__default.createElement("span", {
        className: `${prefix}--toggle__text--right`
      }))));
    });
  }

}

_defineProperty(ToggleSkeleton, "propTypes", {
  ['aria-label']: PropTypes.string.isRequired,

  /**
   * Specify an optional className to add to the form item wrapper.
   */
  className: PropTypes.string,

  /**
   * Provide an id that unique represents the underlying `<input>`
   */
  id: PropTypes.string,

  /**
   * Provide the text that will be read by a screen reader when visiting this
   * control
   * `aria-label` is always required but will be undefined if `labelText` is also
   * provided
   */
  labelText: PropTypes.string,

  /**
   * Specify the size of the Toggle. Currently only supports 'sm' or 'md' (default)
   */
  size: PropTypes.oneOf(['sm', 'md'])
});

_defineProperty(ToggleSkeleton, "defaultProps", {
  ['aria-label']: 'Toggle is loading',
  size: 'md'
});

export { ToggleSkeleton, ToggleSkeleton as default };
