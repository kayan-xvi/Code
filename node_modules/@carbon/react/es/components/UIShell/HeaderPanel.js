/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React__default from 'react';
import cx from 'classnames';
import PropTypes from 'prop-types';
import { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';
import { usePrefix } from '../../internal/usePrefix.js';

const HeaderPanel = /*#__PURE__*/React__default.forwardRef(function HeaderPanel(_ref, ref) {
  let {
    'aria-label': ariaLabel,
    'aria-labelledby': ariaLabelledBy,
    children,
    className: customClassName,
    expanded,
    ...other
  } = _ref;
  const prefix = usePrefix();
  const accessibilityLabel = {
    'aria-label': ariaLabel,
    'aria-labelledby': ariaLabelledBy
  };
  const className = cx(`${prefix}--header-panel`, {
    [`${prefix}--header-panel--expanded`]: expanded,
    [customClassName]: !!customClassName
  });
  return /*#__PURE__*/React__default.createElement("div", _extends({}, other, {
    className: className
  }, accessibilityLabel, {
    ref: ref
  }), children);
});
HeaderPanel.propTypes = {
  /**
   * Required props for accessibility label on the underlying menu
   */
  ...AriaLabelPropType,

  /**
   * Optionally provide a custom class to apply to the underlying `<li>` node
   */
  className: PropTypes.string,

  /**
   * Specify whether the panel is expanded
   */
  expanded: PropTypes.bool
};
HeaderPanel.displayName = 'HeaderPanel';
var HeaderPanel$1 = HeaderPanel;

export { HeaderPanel$1 as default };
