{"version":3,"file":"meter.js","sourceRoot":"","sources":["meter.ts"],"names":[],"mappings":"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","sourcesContent":["// Internal Imports\nimport { MeterChartModel } from '../model/meter';\nimport { Chart } from '../chart';\nimport * as Configuration from '../configuration';\nimport {\n\tChartConfig,\n\tMeterChartOptions,\n\tLayoutGrowth,\n\tLayoutDirection,\n\tRenderTypes,\n} from '../interfaces/index';\nimport * as Tools from '../tools';\nimport { Meter } from './../components/graphs/meter';\n\n// Components\nimport {\n\tPie,\n\t// the imports below are needed because of typescript bug (error TS4029)\n\tTooltip,\n\tLegend,\n\tLayoutComponent,\n\tMeterTitle,\n\tSpacer,\n} from '../components/index';\n\nexport class MeterChart extends Chart {\n\tmodel = new MeterChartModel(this.services);\n\n\tconstructor(holder: Element, chartConfigs: ChartConfig<MeterChartOptions>) {\n\t\tsuper(holder, chartConfigs);\n\n\t\t// use prop meter options or regular meter options\n\t\tlet options = chartConfigs.options.meter.proportional\n\t\t\t? Tools.merge(\n\t\t\t\t\tTools.clone(Configuration.options.proportionalMeterChart),\n\t\t\t\t\tchartConfigs.options\n\t\t\t  )\n\t\t\t: Tools.merge(\n\t\t\t\t\tTools.clone(Configuration.options.meterChart),\n\t\t\t\t\tchartConfigs.options\n\t\t\t  );\n\n\t\t// Merge the default options for this chart\n\t\t// With the user provided options\n\t\tthis.model.setOptions(options);\n\n\t\t// Initialize data, services, components etc.\n\t\tthis.init(holder, chartConfigs);\n\t}\n\n\tgetComponents() {\n\t\tconst showLabels = Tools.getProperty(\n\t\t\tthis.model.getOptions(),\n\t\t\t'meter',\n\t\t\t'showLabels'\n\t\t);\n\t\tconst meterComponents = [\n\t\t\t...(showLabels\n\t\t\t\t? [\n\t\t\t\t\t\t// Meter has a unique dataset title within the graph\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'meter-title',\n\t\t\t\t\t\t\tcomponents: [\n\t\t\t\t\t\t\t\tnew MeterTitle(this.model, this.services),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tgrowth: LayoutGrowth.STRETCH,\n\t\t\t\t\t\t\trenderType: RenderTypes.SVG,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// Create the title spacer\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'spacer',\n\t\t\t\t\t\t\tcomponents: [\n\t\t\t\t\t\t\t\tnew Spacer(this.model, this.services, {\n\t\t\t\t\t\t\t\t\tsize: 8,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tgrowth: LayoutGrowth.STRETCH,\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: []),\n\t\t\t// Specify what to render inside the graph only\n\t\t\t{\n\t\t\t\tid: 'meter-graph',\n\t\t\t\tcomponents: [new Meter(this.model, this.services)],\n\t\t\t\tgrowth: LayoutGrowth.STRETCH,\n\t\t\t\trenderType: RenderTypes.SVG,\n\t\t\t},\n\t\t];\n\n\t\t// the graph frame for meter includes the custom title (and spacer)\n\t\tconst graphFrame = [\n\t\t\tnew LayoutComponent(this.model, this.services, meterComponents, {\n\t\t\t\tdirection: LayoutDirection.COLUMN,\n\t\t\t}),\n\t\t];\n\n\t\t// add the meter title as a top level component\n\t\tconst components: any[] = this.getChartComponents(graphFrame, {\n\t\t\tgraphFrameRenderType: RenderTypes.HTML,\n\t\t});\n\n\t\treturn components;\n\t}\n}\n"]}