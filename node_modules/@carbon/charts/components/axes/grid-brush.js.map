{"version":3,"file":"grid-brush.js","sourceRoot":"","sources":["grid-brush.ts"],"names":[],"mappings":"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","sourcesContent":["// Internal Imports\nimport { Component } from '../component';\nimport { Events, RenderTypes, ScaleTypes } from '../../interfaces';\nimport { DOMUtils } from '../../services';\n\n// D3 Imports\nimport { brushX } from 'd3-brush';\nimport { scaleTime } from 'd3-scale';\n// @ts-ignore\n// ts-ignore is needed because `@types/d3`\n// is missing the `pointer` function\nimport { pointer } from 'd3-selection';\n\n// This class is used for handle brush events in chart\nexport class ChartBrush extends Component {\n\tstatic DASH_LENGTH = 4;\n\n\ttype = 'grid-brush';\n\trenderType = RenderTypes.SVG;\n\n\tselectionSelector = 'rect.selection'; // needs to match the class name in d3.brush\n\n\tfrontSelectionSelector = 'rect.frontSelection'; // needs to match the class name in _grid-brush.scss\n\n\trender(animate = true) {\n\t\tconst svg = this.parent;\n\n\t\t// use this area to display selection above all graphs\n\t\tconst frontSelectionArea = this.getComponentContainer();\n\t\tconst backdrop = DOMUtils.appendOrSelect(\n\t\t\tsvg,\n\t\t\t'svg.chart-grid-backdrop'\n\t\t);\n\t\t// use this area to handle d3 brush events\n\t\tconst brushArea = DOMUtils.appendOrSelect(backdrop, `g.${this.type}`);\n\n\t\t// set an id for rect.selection to be referred\n\t\tconst d3Selection = DOMUtils.appendOrSelect(\n\t\t\tbrushArea,\n\t\t\tthis.selectionSelector\n\t\t);\n\n\t\tconst { width, height } = DOMUtils.getSVGElementSize(backdrop, {\n\t\t\tuseAttrs: true,\n\t\t});\n\n\t\tconst { cartesianScales } = this.services;\n\t\tconst mainXScaleType = cartesianScales.getMainXScaleType();\n\t\tconst mainXScale = cartesianScales.getMainXScale();\n\t\tconst [xScaleStart, xScaleEnd] = mainXScale.range();\n\t\tfrontSelectionArea.attr('transform', `translate(${xScaleStart},0)`);\n\t\tconst frontSelection = DOMUtils.appendOrSelect(\n\t\t\tfrontSelectionArea,\n\t\t\tthis.frontSelectionSelector\n\t\t);\n\n\t\tif (mainXScale && mainXScaleType === ScaleTypes.TIME) {\n\t\t\t// get current zoomDomain\n\t\t\tlet zoomDomain = this.model.get('zoomDomain');\n\t\t\tif (zoomDomain === undefined) {\n\t\t\t\t// default to full range with extended domain\n\t\t\t\tzoomDomain = this.services.zoom.getDefaultZoomBarDomain();\n\t\t\t\tif (zoomDomain) {\n\t\t\t\t\tthis.model.set(\n\t\t\t\t\t\t{ zoomDomain: zoomDomain },\n\t\t\t\t\t\t{ animate: false }\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst updateSelectionDash = (selection) => {\n\t\t\t\t// set end drag point to dash\n\t\t\t\tconst selectionWidth = selection[1] - selection[0];\n\t\t\t\tlet dashArray = '0,' + selectionWidth.toString(); // top (invisible)\n\n\t\t\t\t// right\n\t\t\t\tconst dashCount = Math.floor(height / ChartBrush.DASH_LENGTH);\n\t\t\t\tconst totalRightDash = dashCount * ChartBrush.DASH_LENGTH;\n\t\t\t\tfor (let i = 0; i < dashCount; i++) {\n\t\t\t\t\tdashArray += ',' + ChartBrush.DASH_LENGTH; // for each full length dash\n\t\t\t\t}\n\t\t\t\tdashArray += ',' + (height - totalRightDash); // for rest of the right height\n\t\t\t\t// if dash count is even, one more \",0\" is needed to make total right dash pattern even\n\t\t\t\tif (dashCount % 2 === 1) {\n\t\t\t\t\tdashArray += ',0';\n\t\t\t\t}\n\t\t\t\tdashArray += ',' + selectionWidth.toString(); // bottom (invisible)\n\t\t\t\tdashArray += ',' + height.toString(); // left\n\t\t\t\tfrontSelection.attr('stroke-dasharray', dashArray);\n\t\t\t};\n\n\t\t\tconst brushEventHandler = (event) => {\n\t\t\t\t// selection range: [0, width]\n\t\t\t\tconst selection = event.selection;\n\t\t\t\tif (selection === null || selection[0] === selection[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// copy the d3 selection attrs to front selection element\n\t\t\t\tfrontSelection\n\t\t\t\t\t.attr(\n\t\t\t\t\t\t'x',\n\t\t\t\t\t\tparseFloat(d3Selection.attr('x')) +\n\t\t\t\t\t\t\tparseFloat(backdrop.attr('x'))\n\t\t\t\t\t)\n\t\t\t\t\t.attr('y', d3Selection.attr('y'))\n\t\t\t\t\t.attr('width', d3Selection.attr('width'))\n\t\t\t\t\t.attr('height', d3Selection.attr('height'))\n\t\t\t\t\t.style('cursor', 'pointer')\n\t\t\t\t\t.style('display', null);\n\n\t\t\t\tupdateSelectionDash(selection);\n\t\t\t};\n\n\t\t\t// assume max range is [0, width]\n\t\t\tconst updateZoomDomain = (startPoint, endPoint) => {\n\t\t\t\t// create xScale based on current zoomDomain\n\t\t\t\tconst xScale = scaleTime().range([0, width]).domain(zoomDomain);\n\n\t\t\t\tlet newDomain = [\n\t\t\t\t\txScale.invert(startPoint),\n\t\t\t\t\txScale.invert(endPoint),\n\t\t\t\t];\n\t\t\t\t// if selected start time and end time are the same\n\t\t\t\t// reset to default full range\n\t\t\t\tif (newDomain[0].valueOf() === newDomain[1].valueOf()) {\n\t\t\t\t\t// same as d3 behavior and zoom bar behavior: set to default full range\n\t\t\t\t\tnewDomain = this.services.zoom.getDefaultZoomBarDomain();\n\t\t\t\t}\n\n\t\t\t\t// only if zoomDomain needs update\n\t\t\t\tif (\n\t\t\t\t\tzoomDomain[0].valueOf() !== newDomain[0].valueOf() ||\n\t\t\t\t\tzoomDomain[1].valueOf() !== newDomain[1].valueOf()\n\t\t\t\t) {\n\t\t\t\t\tthis.services.zoom.handleDomainChange(newDomain);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet brush;\n\n\t\t\tconst brushed = (event) => {\n\t\t\t\t// max selection range: [0, width]\n\t\t\t\tconst selection = event.selection;\n\n\t\t\t\tif (selection !== null) {\n\t\t\t\t\t// updateZoomDomain assumes max range is [0, width]\n\t\t\t\t\tupdateZoomDomain(selection[0], selection[1]);\n\n\t\t\t\t\t// clear brush selection\n\t\t\t\t\tbrushArea.call(brush.move, null);\n\t\t\t\t\t// hide frontSelection\n\t\t\t\t\tfrontSelection.style('display', 'none');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (height != 0 && width != 0) {\n\t\t\t\t// leave some space to display selection strokes besides axis\n\t\t\t\tbrush = brushX()\n\t\t\t\t\t.extent([\n\t\t\t\t\t\t[0, 0],\n\t\t\t\t\t\t[width - 1, height],\n\t\t\t\t\t])\n\t\t\t\t\t.on('start brush end', brushEventHandler)\n\t\t\t\t\t.on('end.brushed', brushed);\n\n\t\t\t\tbrushArea.call(brush);\n\t\t\t}\n\n\t\t\tconst zoomRatio = this.services.zoom.getZoomRatio();\n\t\t\tbackdrop.on('click', function (event) {\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tconst holder = this.services.domUtils.getHolder();\n\n\t\t\t\t\t// clickedX range: [0, width]\n\t\t\t\t\tconst clickedX = pointer(brushArea.node(), holder)[0];\n\n\t\t\t\t\tlet leftPoint = clickedX - (width * zoomRatio) / 2;\n\t\t\t\t\tif (leftPoint < 0) {\n\t\t\t\t\t\tleftPoint = 0;\n\t\t\t\t\t}\n\t\t\t\t\tlet rightPoint = clickedX + (width * zoomRatio) / 2;\n\t\t\t\t\tif (rightPoint > width) {\n\t\t\t\t\t\trightPoint = width;\n\t\t\t\t\t}\n\t\t\t\t\t// updateZoomDomain assumes max range is [0, width]\n\t\t\t\t\tupdateZoomDomain(leftPoint, rightPoint);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n"]}