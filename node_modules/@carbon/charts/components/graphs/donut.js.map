{"version":3,"file":"donut.js","sourceRoot":"","sources":["donut.ts"],"names":[],"mappings":"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","sourcesContent":["// Internal Imports\nimport { Pie } from './pie';\nimport { DOMUtils } from '../../services';\nimport * as Tools from '../../tools';\nimport { RenderTypes } from '../../interfaces';\n\n// D3 Imports\nimport { select } from 'd3-selection';\nimport { interpolateNumber, interpolateRound } from 'd3-interpolate';\n\nexport class Donut extends Pie {\n\ttype = 'donut';\n\trenderType = RenderTypes.SVG;\n\n\trender(animate = true) {\n\t\t// Call render() from Pie\n\t\tsuper.render(animate);\n\n\t\tconst self = this;\n\n\t\t// if there are no data, remove the center content\n\t\t// that is the old one and do nothing\n\t\tif (this.model.isDataEmpty()) {\n\t\t\tthis.getComponentContainer().select('g.center').remove();\n\t\t\treturn;\n\t\t}\n\n\t\tconst svg = DOMUtils.appendOrSelect(\n\t\t\tthis.getComponentContainer(),\n\t\t\t'g.center'\n\t\t);\n\t\tconst options = this.getOptions();\n\n\t\t// Compute the outer radius needed\n\t\tconst radius = this.computeRadius();\n\t\tconst donutTitle = Tools.getProperty(\n\t\t\toptions,\n\t\t\t'donut',\n\t\t\t'center',\n\t\t\t'label'\n\t\t);\n\n\t\t// Add the number shown in the center of the donut\n\t\tDOMUtils.appendOrSelect(svg, 'text.donut-figure')\n\t\t\t.attr('text-anchor', 'middle')\n\t\t\t.style('dominant-baseline', () => {\n\t\t\t\t// Center figure if title is empty\n\t\t\t\tif (donutTitle === null || donutTitle === '') {\n\t\t\t\t\treturn 'central';\n\t\t\t\t}\n\n\t\t\t\treturn 'initial';\n\t\t\t})\n\t\t\t.style('font-size', () =>\n\t\t\t\toptions.donut.center.numberFontSize(radius)\n\t\t\t)\n\t\t\t.transition()\n\t\t\t.call((t) =>\n\t\t\t\tthis.services.transitions.setupTransition({\n\t\t\t\t\ttransition: t,\n\t\t\t\t\tname: 'donut-figure-enter-update',\n\t\t\t\t\tanimate,\n\t\t\t\t})\n\t\t\t)\n\t\t\t.tween('text', function () {\n\t\t\t\treturn self.centerNumberTween(select(this));\n\t\t\t});\n\n\t\t// Title will be rendered only if it isn't empty\n\t\tif (donutTitle !== null && donutTitle !== '') {\n\t\t\t// Add the label below the number in the center of the donut\n\t\t\tDOMUtils.appendOrSelect(svg, 'text.donut-title')\n\t\t\t\t.attr('text-anchor', 'middle')\n\t\t\t\t.style('font-size', () =>\n\t\t\t\t\toptions.donut.center.titleFontSize(radius)\n\t\t\t\t)\n\t\t\t\t.attr('y', options.donut.center.titleYPosition(radius))\n\t\t\t\t.text(donutTitle);\n\t\t}\n\t}\n\n\tgetInnerRadius() {\n\t\t// Compute the outer radius needed\n\t\tconst radius = this.computeRadius();\n\n\t\treturn radius * (3 / 4);\n\t}\n\n\tcenterNumberTween(d3Ref) {\n\t\tconst options = this.getOptions();\n\n\t\tlet donutCenterFigure = Tools.getProperty(\n\t\t\toptions,\n\t\t\t'donut',\n\t\t\t'center',\n\t\t\t'number'\n\t\t);\n\t\tif (donutCenterFigure === null) {\n\t\t\tdonutCenterFigure = this.model\n\t\t\t\t.getDisplayData()\n\t\t\t\t.reduce((accumulator, d) => {\n\t\t\t\t\treturn accumulator + d[options.pie.valueMapsTo];\n\t\t\t\t}, 0);\n\t\t}\n\n\t\t// Remove commas from the current value string, and convert to an int\n\t\tconst currentValue =\n\t\t\tparseInt(d3Ref.text().replace(/[, ]+/g, ''), 10) || 0;\n\n\t\tlet interpolateFunction;\n\t\tif (currentValue % 1 === 0 && donutCenterFigure % 1 === 0) {\n\t\t\tinterpolateFunction = interpolateRound;\n\t\t} else {\n\t\t\tinterpolateFunction = interpolateNumber;\n\t\t}\n\n\t\tconst i = interpolateFunction(currentValue, donutCenterFigure);\n\n\t\treturn (t) => {\n\t\t\tconst { numberFormatter } = options.donut.center;\n\t\t\td3Ref.text(numberFormatter(i(t)));\n\t\t};\n\t}\n}\n"]}