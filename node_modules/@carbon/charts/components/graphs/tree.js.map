{"version":3,"file":"tree.js","sourceRoot":"","sources":["tree.ts"],"names":[],"mappings":"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","sourcesContent":["// Internal Imports\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\nimport { Events, RenderTypes, TreeTypes } from '../../interfaces';\nimport * as Tools from '../../tools';\n\n// D3 Imports\nimport { cluster as d3Cluster, tree as d3Tree, hierarchy } from 'd3-hierarchy';\nimport { linkHorizontal } from 'd3-shape';\nimport { select } from 'd3-selection';\n\nconst NODE_OFFSET = 6;\n\nexport class Tree extends Component {\n\ttype = 'tree';\n\trenderType = RenderTypes.SVG;\n\n\tgetLongestLabel(data) {\n\t\tlet longestLabel = '';\n\t\tdata.forEach((d) => {\n\t\t\tlet longestLabelInChildren = d.children\n\t\t\t\t? this.getLongestLabel(d.children)\n\t\t\t\t: '';\n\t\t\tif (\n\t\t\t\tlongestLabelInChildren.length > longestLabel.length ||\n\t\t\t\td.name.length > longestLabel.length\n\t\t\t) {\n\t\t\t\tlongestLabel =\n\t\t\t\t\tlongestLabelInChildren.length > d.name.length\n\t\t\t\t\t\t? longestLabelInChildren\n\t\t\t\t\t\t: d.name;\n\t\t\t}\n\t\t});\n\n\t\treturn longestLabel;\n\t}\n\n\tgetMockLabelWidth(svg, label) {\n\t\t// Add mock label to get dimensions\n\t\tconst mockLabel = svg\n\t\t\t.append('text')\n\t\t\t.attr('dy', '0.31em')\n\t\t\t.attr('x', 0)\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.text(label);\n\n\t\t// Get the mock label width\n\t\tconst { width: mockLabelWidth } = DOMUtils.getSVGElementSize(\n\t\t\tmockLabel.node(),\n\t\t\t{\n\t\t\t\tuseBBox: true,\n\t\t\t}\n\t\t);\n\n\t\t// Remove the mock title label\n\t\tmockLabel.remove();\n\n\t\treturn mockLabelWidth;\n\t}\n\n\trender(animate = true) {\n\t\tconst svg = this.getComponentContainer();\n\n\t\t// Empty out the svg before rendering the tree\n\t\tsvg.html('');\n\n\t\tconst { width, height } = DOMUtils.getSVGElementSize(this.parent, {\n\t\t\tuseAttrs: true,\n\t\t});\n\n\t\tif (width < 1 || height < 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options = this.model.getOptions();\n\t\tconst displayData = this.model.getDisplayData();\n\n\t\tconst rootTitle =\n\t\t\tTools.getProperty(options, 'tree', 'rootTitle') || 'Tree';\n\n\t\tconst mockRootTitleWidth = this.getMockLabelWidth(svg, rootTitle);\n\n\t\tlet longestLabel = this.getLongestLabel(displayData);\n\t\tconst mockLongestLabelWidth = this.getMockLabelWidth(svg, longestLabel);\n\n\t\tconst margin = {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft:\n\t\t\t\tmockRootTitleWidth > 0\n\t\t\t\t\t? mockRootTitleWidth + NODE_OFFSET\n\t\t\t\t\t: 30 - NODE_OFFSET,\n\t\t};\n\t\tconst root = hierarchy({\n\t\t\tname: rootTitle,\n\t\t\tchildren: displayData,\n\t\t}) as any;\n\n\t\tconst dx = 10;\n\t\tconst dy = width / 6;\n\n\t\tconst update = (source) => {\n\t\t\tconst nodes = root.descendants().reverse();\n\t\t\tconst links = root.links();\n\n\t\t\tlet left = root;\n\t\t\tlet right = root;\n\t\t\troot.eachBefore((node) => {\n\t\t\t\tif (node.x < left.x) left = node;\n\t\t\t\tif (node.x > right.x) right = node;\n\t\t\t});\n\n\t\t\tconst height = right.x - left.x;\n\n\t\t\tconst transition = svg\n\t\t\t\t.transition()\n\t\t\t\t.call((t) =>\n\t\t\t\t\tthis.services.transitions.setupTransition({\n\t\t\t\t\t\ttransition: t,\n\t\t\t\t\t\tname: 'tree-update-viewbox',\n\t\t\t\t\t\tanimate: true,\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.attr('viewBox', [-margin.left, left.x, width, height]);\n\n\t\t\t// Update data on nodes\n\t\t\tconst nodeGroups = nodeGroup\n\t\t\t\t.selectAll('g')\n\t\t\t\t.data(nodes, (d) => d.id);\n\n\t\t\tconst self = this;\n\t\t\t// Add any entering nodes\n\t\t\tconst nodeGroupsEnter = nodeGroups\n\t\t\t\t.enter()\n\t\t\t\t.append('g')\n\t\t\t\t.attr('transform', () => `translate(${source.y0},${source.x0})`)\n\t\t\t\t.attr('class', (d) =>\n\t\t\t\t\td.depth !== 0 && d.children && d.children.length > 0\n\t\t\t\t\t\t? 'clickable'\n\t\t\t\t\t\t: null\n\t\t\t\t)\n\t\t\t\t.on('mouseover', function (event, d) {\n\t\t\t\t\t// Dispatch mouse event\n\t\t\t\t\tself.services.events.dispatchEvent(\n\t\t\t\t\t\tEvents.Tree.NODE_MOUSEOVER,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\telement: select(this),\n\t\t\t\t\t\t\tdatum: d,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.on('click', function (event, d) {\n\t\t\t\t\tif (d.depth !== 0) {\n\t\t\t\t\t\td.children = d.children ? null : d._children;\n\n\t\t\t\t\t\tupdate(d);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Dispatch mouse event\n\t\t\t\t\tself.services.events.dispatchEvent(Events.Tree.NODE_CLICK, {\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\telement: select(this),\n\t\t\t\t\t\tdatum: d,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.on('mouseout', function (event, d) {\n\t\t\t\t\t// Dispatch mouse event\n\t\t\t\t\tself.services.events.dispatchEvent(\n\t\t\t\t\t\tEvents.Tree.NODE_MOUSEOUT,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\telement: select(this),\n\t\t\t\t\t\t\tdatum: d,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t// Add node circles to entering nodes\n\t\t\tnodeGroupsEnter\n\t\t\t\t.append('circle')\n\t\t\t\t.attr('r', 2.5)\n\t\t\t\t.attr('class', (d) => (d._children ? 'parent' : 'child'))\n\t\t\t\t.attr('stroke-width', 10);\n\n\t\t\t// Add node labels\n\t\t\tnodeGroupsEnter\n\t\t\t\t.append('text')\n\t\t\t\t.attr('dy', '0.31em')\n\t\t\t\t.attr('x', (d) => (d._children ? -NODE_OFFSET : NODE_OFFSET))\n\t\t\t\t.attr('text-anchor', (d) => (d._children ? 'end' : 'start'))\n\t\t\t\t.text((d) => d.data.name)\n\t\t\t\t.clone(true)\n\t\t\t\t.attr('class', 'text-stroke')\n\t\t\t\t.lower();\n\n\t\t\t// Reposition nodes\n\t\t\tnodeGroups\n\t\t\t\t.merge(nodeGroupsEnter)\n\t\t\t\t.transition(transition)\n\t\t\t\t.attr('transform', (d) => `translate(${d.y},${d.x})`)\n\t\t\t\t.attr('fill-opacity', 1)\n\t\t\t\t.attr('stroke-opacity', 1);\n\n\t\t\t// Remove exiting nodes\n\t\t\tnodeGroups\n\t\t\t\t.exit()\n\t\t\t\t.transition(transition)\n\t\t\t\t.remove()\n\t\t\t\t.attr('transform', () => `translate(${source.y},${source.x})`)\n\t\t\t\t.attr('fill-opacity', 0)\n\t\t\t\t.attr('stroke-opacity', 0);\n\n\t\t\t// Update data on links\n\t\t\tconst linkPaths = linkGroup\n\t\t\t\t.selectAll('path')\n\t\t\t\t.data(links, (d) => d.target.id);\n\n\t\t\t// Add any entering link paths\n\t\t\tconst linkPathsEnter = linkPaths\n\t\t\t\t.enter()\n\t\t\t\t.append('path')\n\t\t\t\t.attr('d', (d) => {\n\t\t\t\t\tconst o = { x: source.x0, y: source.y0 };\n\t\t\t\t\treturn diagonal({ source: o, target: o });\n\t\t\t\t});\n\n\t\t\t// Reposition updating link paths\n\t\t\tlinkPaths\n\t\t\t\t.merge(linkPathsEnter)\n\t\t\t\t.transition(transition)\n\t\t\t\t.attr('d', diagonal);\n\n\t\t\t// Remove any exiting link paths\n\t\t\tlinkPaths\n\t\t\t\t.exit()\n\t\t\t\t.transition(transition)\n\t\t\t\t.remove()\n\t\t\t\t.attr('d', () => {\n\t\t\t\t\tconst o = { x: source.x, y: source.y };\n\t\t\t\t\treturn diagonal({ source: o, target: o });\n\t\t\t\t});\n\n\t\t\t// Update position data for nodes\n\t\t\troot.eachBefore((d) => {\n\t\t\t\td.x0 = d.x;\n\t\t\t\td.y0 = d.y;\n\t\t\t});\n\t\t};\n\n\t\tconst descendants = root.descendants();\n\t\tconst maxDepth = descendants[descendants.length - 1].depth;\n\n\t\tconst tree =\n\t\t\tTools.getProperty(options, 'tree', 'type') === TreeTypes.DENDROGRAM\n\t\t\t\t? d3Cluster().size([\n\t\t\t\t\t\theight,\n\t\t\t\t\t\twidth -\n\t\t\t\t\t\t\tmockLongestLabelWidth -\n\t\t\t\t\t\t\tmaxDepth * NODE_OFFSET -\n\t\t\t\t\t\t\tmockRootTitleWidth,\n\t\t\t\t  ])\n\t\t\t\t: d3Tree()\n\t\t\t\t\t\t.nodeSize([dx, dy])\n\t\t\t\t\t\t.size([\n\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\twidth -\n\t\t\t\t\t\t\t\tmockLongestLabelWidth -\n\t\t\t\t\t\t\t\tmaxDepth * NODE_OFFSET -\n\t\t\t\t\t\t\t\tmockRootTitleWidth,\n\t\t\t\t\t\t]);\n\n\t\tconst diagonal = linkHorizontal()\n\t\t\t.x((d: any) => d.y)\n\t\t\t.y((d: any) => d.x) as any;\n\n\t\troot.x0 = dy / 2;\n\t\troot.y0 = 0;\n\t\troot.descendants().forEach((d, i) => {\n\t\t\td.id = i;\n\t\t\td._children = d.children;\n\t\t});\n\n\t\ttree(root);\n\n\t\tsvg.attr('viewBox', [-margin.left, -margin.top, width, dx]).style(\n\t\t\t'user-select',\n\t\t\t'none'\n\t\t);\n\n\t\tconst linkGroup = svg.append('g').attr('class', 'links');\n\t\tconst nodeGroup = svg.append('g').attr('class', 'nodes');\n\n\t\tupdate(root);\n\t}\n}\n"]}