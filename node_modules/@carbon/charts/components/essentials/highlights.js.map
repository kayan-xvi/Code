{"version":3,"file":"highlights.js","sourceRoot":"","sources":["highlights.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '../component';\nimport * as Tools from '../../tools';\nimport { ChartModel } from '../../model/model';\nimport { AxisPositions, RenderTypes, ScaleTypes } from '../../interfaces';\n\n// D3 Imports\n// @ts-ignore\n// ts-ignore is needed because `@types/d3`\n// is missing the `pointer` function\nimport { select } from 'd3-selection';\n\n// Carbon position service\nimport Position from '@carbon/utils-position';\n\nexport class Highlight extends Component {\n\ttype = 'highlight';\n\trenderType = RenderTypes.SVG;\n\n\tlabel: any;\n\n\tpositionService = new Position();\n\thighlightStrokeWidth = 1;\n\n\tconstructor(model: ChartModel, services: any) {\n\t\tsuper(model, services);\n\t}\n\n\trender(animate = false) {\n\t\tconst axesOptions = Tools.getProperty(this.getOptions(), 'axes');\n\t\tconst highlightData = [];\n\n\t\tObject.keys(axesOptions).forEach((axisPosition) => {\n\t\t\tif (Object.values(AxisPositions).includes(axisPosition as any)) {\n\t\t\t\tconst axisOptions = axesOptions[axisPosition];\n\t\t\t\tif (\n\t\t\t\t\taxisOptions.highlights &&\n\t\t\t\t\taxisOptions.highlights.data.length > 0\n\t\t\t\t) {\n\t\t\t\t\thighlightData.push({\n\t\t\t\t\t\taxisPosition,\n\t\t\t\t\t\thighlightStartMapsTo:\n\t\t\t\t\t\t\taxisOptions.highlights.highlightStartMapsTo,\n\t\t\t\t\t\thighlightEndMapsTo:\n\t\t\t\t\t\t\taxisOptions.highlights.highlightEndMapsTo,\n\t\t\t\t\t\tlabelMapsTo: axisOptions.highlights.labelMapsTo,\n\t\t\t\t\t\thighlight: axisOptions.highlights.data,\n\t\t\t\t\t\tcolor: axisOptions.highlights.color,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Grab container SVG\n\t\tconst svg = this.getComponentContainer({ withinChartClip: true });\n\n\t\t// Update data on all axis highlight groups\n\t\tconst highlightAxisGroups = svg\n\t\t\t.selectAll('g.axis-highlight')\n\t\t\t.data(highlightData, (highlightData) => highlightData.axisPosition);\n\n\t\t// Remove axis highlight groups that are no longer needed\n\t\thighlightAxisGroups.exit().attr('opacity', 0).remove();\n\n\t\t// Add the axis highlight groups that need to be introduced\n\t\tconst highlightAxisGroupsEnter = highlightAxisGroups\n\t\t\t.enter()\n\t\t\t.append('g');\n\n\t\tconst highlightAxisGroupsMerge = highlightAxisGroupsEnter.merge(\n\t\t\thighlightAxisGroups\n\t\t);\n\t\thighlightAxisGroupsMerge.attr(\n\t\t\t'class',\n\t\t\t(d) => `axis-highlight ${d.axisPosition}`\n\t\t);\n\n\t\tconst highlightGroups = highlightAxisGroupsMerge\n\t\t\t.selectAll('g.highlight-group')\n\t\t\t.data((d) =>\n\t\t\t\td.highlight.map((highlight) => {\n\t\t\t\t\thighlight.axisPosition = d.axisPosition;\n\t\t\t\t\thighlight.highlightStartMapsTo = d.highlightStartMapsTo;\n\t\t\t\t\thighlight.labelMapsTo = d.labelMapsTo;\n\t\t\t\t\thighlight.color = d.color;\n\t\t\t\t\thighlight.highlightEndMapsTo = d.highlightEndMapsTo;\n\t\t\t\t\treturn highlight;\n\t\t\t\t})\n\t\t\t);\n\n\t\t// Remove highlight groups that are no longer needed\n\t\thighlightGroups.exit().attr('opacity', 0).remove();\n\n\t\t// Add the highlight groups that need to be introduced\n\t\tconst highlightGroupsEnter = highlightGroups.enter().append('g');\n\n\t\thighlightGroupsEnter.append('rect').attr('class', 'highlight-bar');\n\t\thighlightGroupsEnter.append('line').attr('class', 'highlight-line');\n\n\t\tconst highlightGroupsMerge = highlightGroupsEnter.merge(\n\t\t\thighlightGroups\n\t\t);\n\t\thighlightGroupsMerge.attr('class', 'highlight-group');\n\n\t\tconst self = this;\n\t\thighlightAxisGroupsMerge.each(function ({ axisPosition }) {\n\t\t\tconst mainXScale = self.services.cartesianScales.getMainXScale();\n\t\t\tconst mainYScale = self.services.cartesianScales.getMainYScale();\n\t\t\tconst [xScaleStart, xScaleEnd] = mainXScale.range();\n\t\t\tconst [yScaleEnd, yScaleStart] = mainYScale.range();\n\n\t\t\tconst { cartesianScales } = self.services;\n\t\t\tconst orientation = cartesianScales.getOrientation();\n\t\t\tconst getDomainValue = (d) => cartesianScales.getDomainValue(d);\n\t\t\tconst getRangeValue = (d) => cartesianScales.getRangeValue(d);\n\t\t\tconst [\n\t\t\t\tgetXValue,\n\t\t\t\tgetYValue,\n\t\t\t] = Tools.flipDomainAndRangeBasedOnOrientation(\n\t\t\t\tgetDomainValue,\n\t\t\t\tgetRangeValue,\n\t\t\t\torientation\n\t\t\t);\n\n\t\t\tconst group = select(this);\n\t\t\tif (\n\t\t\t\taxisPosition === AxisPositions.TOP ||\n\t\t\t\taxisPosition === AxisPositions.BOTTOM\n\t\t\t) {\n\t\t\t\tgroup\n\t\t\t\t\t.selectAll('rect.highlight-bar')\n\t\t\t\t\t.transition()\n\t\t\t\t\t.call((t) =>\n\t\t\t\t\t\tself.services.transitions.setupTransition({\n\t\t\t\t\t\t\ttransition: t,\n\t\t\t\t\t\t\tname: 'highlight-bar-update',\n\t\t\t\t\t\t\tanimate,\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t// Stroke width added to stop overflow of highlight\n\t\t\t\t\t.attr(\n\t\t\t\t\t\t'y',\n\t\t\t\t\t\tMath.max(yScaleStart + self.highlightStrokeWidth, 0)\n\t\t\t\t\t)\n\t\t\t\t\t// Stroke width subtracted to stop overflow of highlight\n\t\t\t\t\t.attr(\n\t\t\t\t\t\t'height',\n\t\t\t\t\t\tMath.max(yScaleEnd - 2 * self.highlightStrokeWidth, 0)\n\t\t\t\t\t)\n\t\t\t\t\t.attr('x', ({ highlightStartMapsTo, ...d }) =>\n\t\t\t\t\t\tgetXValue(d[highlightStartMapsTo])\n\t\t\t\t\t)\n\t\t\t\t\t.attr(\n\t\t\t\t\t\t'width',\n\t\t\t\t\t\t({ highlightStartMapsTo, highlightEndMapsTo, ...d }) =>\n\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\tgetXValue(d[highlightEndMapsTo]) -\n\t\t\t\t\t\t\t\t\tgetXValue(d[highlightStartMapsTo]),\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.style('stroke', ({ color, labelMapsTo, ...data }) => {\n\t\t\t\t\t\treturn color && color.scale[data[labelMapsTo]]\n\t\t\t\t\t\t\t? color.scale[data[labelMapsTo]]\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t})\n\t\t\t\t\t.style('stroke-dasharray', '2, 2')\n\t\t\t\t\t.attr('stroke-width', self.highlightStrokeWidth + 'px')\n\t\t\t\t\t.style('fill-opacity', 0.1)\n\t\t\t\t\t.style('fill', ({ color, labelMapsTo, ...data }) => {\n\t\t\t\t\t\treturn color && color.scale[data[labelMapsTo]]\n\t\t\t\t\t\t\t? color.scale[data[labelMapsTo]]\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgroup\n\t\t\t\t\t.selectAll('rect.highlight-bar')\n\t\t\t\t\t.transition()\n\t\t\t\t\t.call((t) =>\n\t\t\t\t\t\tself.services.transitions.setupTransition({\n\t\t\t\t\t\t\ttransition: t,\n\t\t\t\t\t\t\tname: 'highlight-bar-update',\n\t\t\t\t\t\t\tanimate,\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t.attr('x', xScaleStart)\n\t\t\t\t\t.attr('width', Math.max(xScaleEnd - xScaleStart, 0))\n\t\t\t\t\t.attr('y', ({ highlightEndMapsTo, ...d }) =>\n\t\t\t\t\t\tgetYValue(d[highlightEndMapsTo])\n\t\t\t\t\t)\n\t\t\t\t\t.attr(\n\t\t\t\t\t\t'height',\n\t\t\t\t\t\t({ highlightStartMapsTo, highlightEndMapsTo, ...d }) =>\n\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\tgetYValue(d[highlightStartMapsTo]) -\n\t\t\t\t\t\t\t\t\tgetYValue(d[highlightEndMapsTo]),\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.style('stroke', ({ color, labelMapsTo, ...data }) => {\n\t\t\t\t\t\treturn color && color.scale[data[labelMapsTo]]\n\t\t\t\t\t\t\t? color.scale[data[labelMapsTo]]\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t})\n\t\t\t\t\t.style('stroke-dasharray', '2, 2')\n\t\t\t\t\t.attr('stroke-width', self.highlightStrokeWidth + 'px')\n\t\t\t\t\t.style('fill-opacity', 0.1)\n\t\t\t\t\t.style('fill', ({ color, labelMapsTo, ...data }) => {\n\t\t\t\t\t\treturn color && color.scale[data[labelMapsTo]]\n\t\t\t\t\t\t\t? color.scale[data[labelMapsTo]]\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n"]}