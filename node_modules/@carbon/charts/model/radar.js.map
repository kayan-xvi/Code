{"version":3,"file":"radar.js","sourceRoot":"","sources":["radar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,mBAAmB;AACnB,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AACzD,OAAO,KAAK,KAAK,MAAM,UAAU,CAAC;AAElC;qEACqE;AACrE;IAAqC,mCAAmB;IACvD,yBAAY,QAAa;eACxB,kBAAM,QAAQ,CAAC;IAChB,CAAC;IAED,6CAAmB,GAAnB;QACC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElC,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAEpC,IAAA,gDAA8D,EAA5D,gBAAK,EAAE,gBAAqD,CAAC;QAErE,IAAM,iBAAiB,GAAG,KAAK,CAAC,WAAW,CAC1C,WAAW,EACX,GAAG,EACH,MAAM,CACN,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,CAAC,EAAR,CAAQ,CAAC,CAAC;QAEvB,IAAM,MAAM;4BACV,OAAO,GAAK,iBAAiB;WAC3B,WAAW,CAAC,GAAG,CAAC,UAAC,KAAK;YACxB;gBACC,KAAK,CAAC,MAAM,CAAC;eACV,iBAAiB,CAAC,GAAG,CAAC,UAAC,gBAAgB,EAAE,CAAC;gBAC5C,OAAA,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,IAAI;oBAClD,CAAC,CAAC,KAAK,CAAC,WAAW,CACjB,KAAK,EACL,MAAM,EACN,CAAC,EACD,KAAK,CACJ,CAAC,cAAc,EAAE;oBACpB,CAAC,CAAC,SAAS;YAPZ,CAOY,CACZ,EACA;QACH,CAAC,CAAC,CACF,CAAC;QAEF,OAAO,MAAM,CAAC;IACf,CAAC;IACF,sBAAC;AAAD,CAAC,AAvCD,CAAqC,mBAAmB,GAuCvD","sourcesContent":["// Internal Imports\nimport { ChartModelCartesian } from './cartesian-charts';\nimport * as Tools from '../tools';\n\n/** The charting model layer which includes mainly the chart data and options,\n * as well as some misc. information to be shared among components */\nexport class RadarChartModel extends ChartModelCartesian {\n\tconstructor(services: any) {\n\t\tsuper(services);\n\t}\n\n\tgetTabularDataArray() {\n\t\tconst options = this.getOptions();\n\n\t\tconst groupedData = this.getGroupedData();\n\n\t\tconst { angle, value } = Tools.getProperty(options, 'radar', 'axes');\n\n\t\tconst additionalHeaders = Tools.getProperty(\n\t\t\tgroupedData,\n\t\t\t'0',\n\t\t\t'data'\n\t\t).map((d) => d[angle]);\n\n\t\tconst result = [\n\t\t\t['Group', ...additionalHeaders],\n\t\t\t...groupedData.map((datum) => {\n\t\t\t\treturn [\n\t\t\t\t\tdatum['name'],\n\t\t\t\t\t...additionalHeaders.map((additionalHeader, i) =>\n\t\t\t\t\t\tTools.getProperty(datum, 'data', i, value) !== null\n\t\t\t\t\t\t\t? Tools.getProperty(\n\t\t\t\t\t\t\t\t\tdatum,\n\t\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t  ).toLocaleString()\n\t\t\t\t\t\t\t: '&ndash;'\n\t\t\t\t\t),\n\t\t\t\t];\n\t\t\t}),\n\t\t];\n\n\t\treturn result;\n\t}\n}\n"]}