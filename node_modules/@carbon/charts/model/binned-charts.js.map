{"version":3,"file":"binned-charts.js","sourceRoot":"","sources":["binned-charts.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,mBAAmB;AACnB,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAEzD,OAAO,EAAE,GAAG,EAAE,MAAM,WAAW,CAAC;AAEhC;;KAEK;AACL;IAAsC,oCAAmB;IAAzD;;IAwBA,CAAC;IAvBA,8CAAmB,GAAnB;QACC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC1B,IAAA,sCAAW,CAAkB;QAErC,IAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEtD,IAAM,MAAM;;gBAEV,GAAG,CAAC,OAAO,EAAE,iBAAiB,CAAC,IAAI,OAAO;eACvC,iBAAiB,CAAC,GAAG,CAAC,UAAC,KAAK;gBAC9B,OAAA,GAAG,CAAC,KAAK,EAAE,OAAK,WAAa,CAAC;YAA9B,CAA8B,CAC9B;WAEC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK;YACvC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,gBAAM,GAAG,CAAC,CAAC,EAAE,SAAS,CAAG;WAC1C,iBAAiB,CAAC,GAAG,CAAC,UAAC,KAAK;YAC9B,OAAA,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,UAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,CAAG,CAAC;QAAnD,CAAmD,CACnD,GAJyC,CAK1C,CAAC,CACF,CAAC;QAEF,OAAO,MAAM,CAAC;IACf,CAAC;IACF,uBAAC;AAAD,CAAC,AAxBD,CAAsC,mBAAmB,GAwBxD","sourcesContent":["// Internal Imports\nimport { ChartModelCartesian } from './cartesian-charts';\n\nimport { get } from 'lodash-es';\n\n/**\n * this is intended for binned type of charts\n * */\nexport class ChartModelBinned extends ChartModelCartesian {\n\tgetTabularDataArray() {\n\t\tconst options = this.getOptions();\n\t\tconst { groupMapsTo } = options.data;\n\n\t\tconst binnedStackedData = this.getBinnedStackedData();\n\n\t\tconst result = [\n\t\t\t[\n\t\t\t\tget(options, 'bins.rangeLabel') || 'Range',\n\t\t\t\t...binnedStackedData.map((datum) =>\n\t\t\t\t\tget(datum, `0.${groupMapsTo}`)\n\t\t\t\t),\n\t\t\t],\n\t\t\t...get(binnedStackedData, 0).map((d, i) => [\n\t\t\t\t`${get(d, 'data.x0')} â€“ ${get(d, 'data.x1')}`,\n\t\t\t\t...binnedStackedData.map((datum) =>\n\t\t\t\t\tget(datum[i], `data.${get(datum[i], groupMapsTo)}`)\n\t\t\t\t),\n\t\t\t]),\n\t\t];\n\n\t\treturn result;\n\t}\n}\n"]}